syntax = "proto3";

package comm;

option go_package = "example.com/go-comm-grpc;go_comm_grpc";

service Comm {
  rpc FunTest(RequestTest) returns (ResponseTest) {}
  rpc UnirseJuegoCalamar(RequestUnirse) returns (ResponseUnirse) {}
  rpc InicioEtapa(RequestEtapa) returns (ResponseEtapa) {}
  rpc InicioRonda(RequestRonda) returns (ReponseRonda) {}
  rpc JugadaPrimeraEtapa(RequestPrimeraEtapa) returns (ResponsePrimeraEtapa) {}
  rpc JugadaSegundaEtapa(RequestSegundaEtapa) returns (ResponseSegundaEtapa) {}
  rpc JugadaTerceraEtapa(RequestTerceraEtapa) returns (ResponseTerceraEtapa) {}

  rpc RegistrarJugadaJugador(RequestRJJ) returns (ResponseRJJ) {}
  rpc RegistrarJugadaDN(RequestRJDN) returns (ResponseRJDN) {}
  rpc BuscarJugada(RequestBJ) returns (stream ResponseBJ) {}
  rpc ObtenerJugada(RequestOJ) returns (stream ResponseOJ) {}

  rpc SolicitarMonto(RequestMonto) returns (ResponseMonto) {}
}



message RequestTest {
  string body = 1;
}

message ResponseTest {
  string body = 1;
}



message RequestUnirse {
  int32 body = 1;
}

message RequestEtapa {
  int32 etapa = 1;
  int32 numeroJugador = 2;
}

message RequestRonda {
  bool rondaFinal = 1;
}

message RequestPrimeraEtapa {
  int32 jugada = 1;
  int32 ronda = 2;
  int32 jugador = 3;
}

message RequestSegundaEtapa {
  int32 jugada = 1;
  int32 jugador = 2;
}

message RequestTerceraEtapa {
  int32 jugada = 1;
  int32 jugador = 2;
}

message ResponseUnirse {
  int32 numeroJugador = 1;
}

message ResponseEtapa {
  int32 body = 1;
  bool terminoJuego = 2;
}

message ReponseRonda {
  int32 body = 1;
  bool terminoJuego = 2;
}

message ResponsePrimeraEtapa {
  bool estado = 1;
  bool ganador = 2;
}

message ResponseSegundaEtapa {
  bool estado = 1;
}

message ResponseTerceraEtapa {
  bool estado = 1;
}



message RequestRJDN {
  int32 n_jugador = 1;
  int32 n_ronda = 2;
  int32 jugada = 3;
}

message ResponseRJDN {
  string body = 1;
}

message RequestRJJ {
  int32 n_jugador = 1;
  int32 n_ronda = 2;
  int32 jugada = 3;
}

message ResponseRJJ {
  string body = 1;
}

message RequestOJ {
  int32 n_jugador = 1;
  int32 n_ronda = 2;
}

message ResponseOJ {
int32 jugadas = 1;
}

message RequestBJ {
  int32 n_jugador = 1;
  int32 n_ronda = 2;
}

message ResponseBJ {
int32 jugadas = 1;
}



message RequestMonto{
  int32 monto_acumulado=1;
}
message ResponseMonto{
  int32 monto_acumulado=1;
}
